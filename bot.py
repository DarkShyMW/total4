# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π bot.py
import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler

TOKEN = "7711849755:AAHvzB4Y0j80mBoy-r7yhEvnPwu_l_BR5PY"

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö—É–¥–æ–∂–Ω–∏–∫–∞–º–∏", callback_data='manage_artists')],
        [InlineKeyboardButton("–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", callback_data='recent_signups')],
        [InlineKeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ArtPlatform.\n\n'
        '–Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –ø–æ–º–æ–≥–∞—Ç—å —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π.',
        reply_markup=reply_markup
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == 'manage_artists':
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤
        await query.edit_message_text("–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    elif query.data == 'recent_signups':
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π
        await query.edit_message_text("–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n\n1. ArtistFox - 5 –º–∏–Ω –Ω–∞–∑–∞–¥\n2. WolfPainter - 15 –º–∏–Ω –Ω–∞–∑–∞–¥")
    elif query.data == 'stats':
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        await query.edit_message_text("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:\n\n–•—É–¥–æ–∂–Ω–∏–∫–∏: 42\n–ö–ª–∏–µ–Ω—Ç—ã: 128\n–ó–∞–∫–∞–∑—ã: 56")

async def notify_new_user(context: ContextTypes.DEFAULT_TYPE, user_data: dict):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    message = (
        f"üÜï –ù–æ–≤—ã–π {user_data['role']}!\n\n"
        f"–ò–º—è: {user_data['username']}\n"
        f"Email: {user_data['email']}\n"
        f"–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {user_data['species']}"
    )
    
    if user_data['role'] == 'artist':
        message += f"\n–°—Ç–∏–ª—å: {user_data['style']}"
    
    await context.bot.send_message(
        chat_id=context.job.chat_id,
        text=message
    )

def main():
    token = os.getenv('TELEGRAM_BOT_TOKEN', TOKEN)
    application = Application.builder().token(token).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    application.run_polling()

if __name__ == '__main__':
    main()